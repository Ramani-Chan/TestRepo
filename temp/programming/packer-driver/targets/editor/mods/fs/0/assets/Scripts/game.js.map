{"version":3,"sources":["file:///D:/Cocos/Projects/NewProject_1/assets/Scripts/game.ts"],"names":["_decorator","Component","Prefab","systemEvent","SystemEvent","Collider2D","Contact2DType","instantiate","Vec3","tween","Label","director","ccclass","property","game","addScore","curScore","score","string","toString","minusLife","lifeCount","lifec","shoot","event","keyCode","schedule","newShot2","bullet","setPosition","node","getChildByName","position","x","y","addChild","to","start","collision","getComponent","on","BEGIN_CONTACT","selfCollider","otherCollider","colType","tag","destroy","e","newShot","onTouch","onLoad","EventType","KEY_DOWN","update","deltaTime","loadScene"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, Prefab, systemEvent, SystemEvent, EventKeyboard, Collider2D, Contact2DType, IPhysics2DContact, instantiate, Vec3, tween, Label, director } from 'cc';\nconst { ccclass, property } = _decorator;\nimport { enemy } from './enemy';\n/**\n * Predefined variables\n * Name = game\n * DateTime = Tue Jan 18 2022 21:19:45 GMT+0530 (India Standard Time)\n * Author = Vengayam\n * FileBasename = game.ts\n * FileBasenameNoExtension = game\n * URL = db://assets/Scripts/game.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\n *\n */\n \n@ccclass('game')\nexport class game extends Component {\n    @property(Prefab)\n    bullet: Prefab = null;\n\n    @property(Label)\n    score: Label = null;\n\n    @property(Label)\n    lifec: Label = null;\n\n    curScore: number = 0;\n    lifeCount: number = 3;\n    empt: Vec3 = new Vec3(0, 0, 0);\n\n    addScore() {\n        this.curScore += 100;\n        this.score.string = 'Score: ' + this.curScore.toString();\n    }\n\n    minusLife() {\n        this.lifeCount = this.lifeCount- 1;\n        this.lifec.string = 'Lives Remaining: ' + this.lifeCount.toString();\n    }\n\n    shoot(event: EventKeyboard) {\n        if (event.keyCode == 32) {\n            this.schedule(function () {\n                var newShot2 = instantiate(this.bullet);\n                newShot2.setPosition(this.node.getChildByName('player').position.x, this.node.getChildByName('player').position.y, 0);\n                this.node.addChild(newShot2);\n\n                tween(newShot2)\r\n                    .to(5, { position: new Vec3(newShot2.position.x, 400, 0) })\r\n                    .start();\n                //if (newShot.position.y > 250) {\r\n                //    newShot.destroy();\r\n                //}\n                var collision = newShot2.getComponent(Collider2D);\n                if (collision) {\n                    collision.on(Contact2DType.BEGIN_CONTACT, function (selfCollider: Collider2D, otherCollider: Collider2D, colType: IPhysics2DContact) {\r\n                        if (otherCollider.tag == 2) {\n                            try {\r\n                                newShot2.destroy();\n                            }\r\n                            catch (e) { }\r\n                        }\r\n                    }\n                        , this);\n                }\n            }, 0.5, 0);\n            var newShot = instantiate(this.bullet);\n            newShot.setPosition(this.node.getChildByName('player').position.x, this.node.getChildByName('player').position.y, 0);\n            this.node.addChild(newShot);\n\n            tween(newShot)\r\n                .to(5, { position: new Vec3(newShot.position.x, 400, 0) })\r\n                .start();\n                \n            //if (newShot.position.y > 250) {\r\n            //    newShot.destroy();\r\n            //}\n            var collision = newShot.getComponent(Collider2D);\n            if (collision) {\n                collision.on(Contact2DType.BEGIN_CONTACT, function (selfCollider: Collider2D, otherCollider: Collider2D, colType: IPhysics2DContact) {\r\n                    if (otherCollider.tag == 2) {\n                        try {\r\n                            newShot.destroy();\n                        }\r\n                        catch (e) { }\r\n                    }\r\n                }\n                , this);\n            }\n            \n        }\n    }\n\n    onTouch(selfCollider: Collider2D, otherCollider: Collider2D, colType: IPhysics2DContact) {\n        \n    }\n\n    onLoad() {\n        systemEvent.on(SystemEvent.EventType.KEY_DOWN, this.shoot, this);\n        this.lifec.string = 'Lives Remaining: ' + this.lifeCount.toString();\n        //if (this.lifeCount == 0) {\n        //    director.loadScene('GameOver');\n        //}\n        \n    }\n\n    start () {\n        \n    }\n\n    update(deltaTime: number) {\n        if (this.curScore == 1200) {\n            director.loadScene('YouWin');\n        }\n        if (this.lifeCount <= 0) {\n            director.loadScene('GameOver');\n        }\n        \n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}